ERD : https://www.erdcloud.com/d/3iEhfQFR267RHs6QJ

1. **암호화 방식**
    - Hash는 단방향 암호화입니다. 다시 원래의 배열로 돌아올 수 없습니다.
    - 서버안에서 password의 값이 노출되지않아, 개인정보가 유출 될 가능성이 적습니다.
2. **인증 방식**
    - 말 그대로 access가 가능하게 끔 해주는 token 이므로, 해킹의 위험성이 높아집니다.
    - refresh token을 이용하여, expired 시점 혹은 사용자가 원할때마다 access token을 재발급 하는 식으로 해결 할 수 있습니다.
3. **인증과 인가**
    - 이 프로젝트에서 인증은 사용자가 쿠키값으로 정상적인 access token을 가지고 있느냐 였으며, 인가는 인증이 완료 되었을 때, 몇몇 인증이 필요한 method를 실행 시킬 수 있게 해주는 것 입니다.
    - 인증을 완료 했을 시, 인가를 해주는 미들웨어라고 생각합니다. 쿠키값을 가져와, 정상적인 값인지 확인하고, 확인이 완료되면 여러 제한된 method를 이용 가능하게 구현했습니다.
4. **Http Status Code**
    - 200, 201 : 작동, 401 : 클라이언트의 값이 올바르지않거나 틀린 값, 409 : 이미 값이 존재
5. **리팩토링**
    - 정형화 되어있는 명령어들이기에, 크게 어렵지 않을 것 이라 예상하며, 대표적으로 import, export mongoDB에 접근하는 정도가 대표적일 것이라고 생각합니다.
    - 변경 될 수 있는 값은 옆에 주석으로 특정 값을 넣어 놓고, 주석값을 vsc 명령어로 찾아가면서 바꾸면 빠를 것 같습니다.
6. **API 명세서**
    - 코드로써 어떻게 작동하는지 정확하게 알 수 있어, 더욱 직관적으로 이해 할 수 있습니다.